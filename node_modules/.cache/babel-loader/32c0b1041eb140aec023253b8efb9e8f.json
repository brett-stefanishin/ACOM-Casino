{"ast":null,"code":"import _toConsumableArray from \"/Users/BrettHarvey/Documents/Software/ACOM/roulette/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/BrettHarvey/Documents/Software/ACOM/roulette/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/BrettHarvey/Documents/Software/ACOM/roulette/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/BrettHarvey/Documents/Software/ACOM/roulette/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/BrettHarvey/Documents/Software/ACOM/roulette/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/BrettHarvey/Documents/Software/ACOM/roulette/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/BrettHarvey/Documents/Software/ACOM/roulette/src/components/Roulette/Roulette.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport classes from './Roulette.module.css';\nimport Board from '../Board/Board';\nimport RecentNumbers from '../RecentNumbers/RecentNumbers';\nimport BettingPanel from '../BettingPanel/BettingPanel';\n\nvar Roulette = /*#__PURE__*/function (_Component) {\n  _inherits(Roulette, _Component);\n\n  var _super = _createSuper(Roulette);\n\n  function Roulette() {\n    var _this;\n\n    _classCallCheck(this, Roulette);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      spinNum: 0,\n      spin: false,\n      spin_complete: false,\n      lastFive: [0, 0, 0, 0, 0],\n      btn_disable: false\n    };\n\n    _this.create_obj = function () {\n      var obj = {};\n\n      for (var i = 0; i < 15; i++) {\n        if (i === 0) {\n          obj[i] = [5983, 6037];\n        } else {\n          var last = obj[i - 1][1];\n          obj[i] = [Math.round((last + 2.34) * 100) / 100, Math.round((last + 2.34 + 54) * 100) / 100];\n        }\n      }\n\n      return obj;\n    };\n\n    _this.pick_random_number = function (obj) {\n      var keys = Object.keys(obj);\n      var random_key = keys[keys.length * Math.random() << 0];\n      var range_arr = obj[random_key];\n      var random_offset = Math.random() * (range_arr[1] - range_arr[0]) + range_arr[0];\n      return random_offset;\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        spin: false,\n        spin_complete: false,\n        btn_disable: false\n      });\n    };\n\n    _this.addToLastFive = function (number) {\n      var copy = _toConsumableArray(_this.state.lastFive);\n\n      copy.splice(-1, 1);\n      copy.unshift(number);\n\n      _this.setState({\n        lastFive: copy\n      });\n    };\n\n    _this.getResult = function (chosen, obj) {\n      for (var key in obj) {\n        if (obj[key][0] <= chosen && obj[key][1] >= chosen) {\n          return key;\n        }\n      }\n    };\n\n    _this.spin = function () {\n      var number_obj = _this.create_obj();\n\n      var chosen_number = _this.pick_random_number(number_obj);\n\n      var result = _this.getResult(chosen_number, number_obj);\n\n      var current_spinNum = _this.state.spinNum;\n\n      _this.setState({\n        spin: true,\n        spinNum: current_spinNum += 1,\n        chosen: chosen_number,\n        chosen_num: parseInt(result)\n      });\n\n      _this.setState({\n        btn_disable: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          spin_complete: true,\n          spin: false\n        });\n\n        _this.addToLastFive(result);\n\n        setTimeout(function () {\n          _this.reset();\n\n          clearTimeout();\n        }, 1000);\n        clearTimeout();\n      }, 8500);\n      return result;\n    };\n\n    return _this;\n  }\n\n  _createClass(Roulette, [{\n    key: \"render\",\n    value: function render() {\n      var btn_dis_style = null;\n\n      if (this.state.btn_disable) {\n        btn_dis_style = {\n          cursor: 'not-allowed'\n        };\n      }\n\n      var disabledBool = this.state.btn_disable ? \"disabled\" : \"\";\n      var black_numbers = [1, 3, 5, 7, 9, 11, 13];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.App,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.centre,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Board, {\n        spin: this.state.spin,\n        complete: this.state.spin_complete,\n        chosen_number: this.state.chosen,\n        black_numbers: black_numbers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.mid_container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(RecentNumbers, {\n        title: \"Last 5 Spins\",\n        lastFive: this.state.lastFive,\n        black_numbers: black_numbers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BettingPanel, {\n        spin: this.spin,\n        complete: this.state.spin_complete,\n        chosen_number: this.state.chosen_num,\n        disabledBool: disabledBool,\n        btn_dis_style: btn_dis_style,\n        title: \"Betting Panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Roulette;\n}(Component);\n\nexport default Roulette;","map":{"version":3,"sources":["/Users/BrettHarvey/Documents/Software/ACOM/roulette/src/components/Roulette/Roulette.js"],"names":["React","Component","classes","Board","RecentNumbers","BettingPanel","Roulette","state","spinNum","spin","spin_complete","lastFive","btn_disable","create_obj","obj","i","last","Math","round","pick_random_number","keys","Object","random_key","length","random","range_arr","random_offset","reset","setState","addToLastFive","number","copy","splice","unshift","getResult","chosen","key","number_obj","chosen_number","result","current_spinNum","chosen_num","parseInt","setTimeout","clearTimeout","btn_dis_style","cursor","disabledBool","black_numbers","App","centre","mid_container"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './Roulette.module.css';\nimport Board from '../Board/Board';\nimport RecentNumbers from '../RecentNumbers/RecentNumbers';\nimport BettingPanel from '../BettingPanel/BettingPanel';\nclass Roulette extends Component {\n/**\n * Component for entire Roulette game and its children\n */\n    state = {\n        spinNum: 0,\n        spin: false,\n        spin_complete: false,\n        lastFive: [0, 0, 0, 0, 0],\n        btn_disable: false\n    }\n    /**\n     * Create the object used for determining the random result and the ammount to scroll the roulette ribbon by\n     * \n     * @return {object} - The built object\n    */\n    create_obj = () => {\n        let obj = {}\n        for (let i = 0; i < 15; i++) {\n            if (i === 0) {\n                obj[i] = [5983, 6037];\n            } else {\n                let last = obj[i - 1][1];\n                obj[i] = [Math.round((last + 2.34) * 100) / 100, Math.round((last + 2.34 + 54) * 100) / 100];\n            }\n        }\n        return obj\n    }\n    /**\n     * Pick and random number given the object\n     * \n     * @param {object} - Object built using create_obj()\n     * @return {float} - The ammount to scroll the roulette ribbon by\n     */\n    pick_random_number = (obj) => {\n        let keys = Object.keys(obj)\n        let random_key = keys[keys.length * Math.random() << 0];\n        let range_arr = obj[random_key]\n        let random_offset = Math.random() * (range_arr[1] - range_arr[0]) + range_arr[0];\n        return random_offset;\n    }\n    /**\n     * Function used to reset the state when a spin is finished\n     */\n    reset = () => {\n        this.setState({ spin: false, spin_complete: false, btn_disable: false })\n    }\n    /**\n     * Used to add a number to the lastFive to be shown in the recent spins section\n     * \n     * @param {integer} - Number to add to the lastFive array \n     */\n    addToLastFive = (number) => {\n        let copy = [...this.state.lastFive]\n        copy.splice(-1, 1);\n        copy.unshift(number);\n        this.setState({ lastFive: copy })\n    }\n    /**\n     * Used to find what number the ribbon landed on given the ribbon offset\n     * \n     * @param {integer} chosen - The ribbon offset\n     * @param {object} obj - The object built via create_obj()\n     */\n    getResult = (chosen, obj) => {\n        for(var key in obj){\n            if(obj[key][0] <= chosen && obj[key][1] >= chosen){\n                return key\n            }\n        }\n    }\n    /**\n     * Used to spin the ribbon\n     * \n     * @return {integer} The result of the spin \n     */\n    spin = () => {\n        const number_obj = this.create_obj()\n        const chosen_number = this.pick_random_number(number_obj)\n        const result = this.getResult(chosen_number, number_obj)\n        let current_spinNum = this.state.spinNum\n        this.setState({ spin: true, spinNum: current_spinNum += 1, chosen: chosen_number, chosen_num: parseInt(result) })\n        this.setState({ btn_disable: true })\n        setTimeout(() => {\n            this.setState({ spin_complete: true, spin: false })\n            this.addToLastFive(result)\n            setTimeout(() => {\n                this.reset()\n                clearTimeout()\n            }, 1000)\n            clearTimeout()\n        }, 8500)\n        return result;\n    }\n\n\n    render() {\n        let btn_dis_style = null;\n        if(this.state.btn_disable){\n            btn_dis_style = {\n                cursor: 'not-allowed'\n            }\n        }\n        let disabledBool = (this.state.btn_disable) ? \"disabled\" : \"\";\n        const black_numbers = [1, 3, 5, 7, 9, 11, 13]\n\n        return (\n            <div className={classes.App}>\n                <div className={classes.centre}></div>\n                <Board \n                    spin={this.state.spin} \n                    complete={this.state.spin_complete} \n                    chosen_number={this.state.chosen} \n                    black_numbers={black_numbers} \n                />\n                <div className={classes.mid_container}>\n                    <RecentNumbers\n                        title=\"Last 5 Spins\"\n                        lastFive={this.state.lastFive}\n                        black_numbers={black_numbers}\n                    />\n                    <BettingPanel\n                        spin={this.spin}\n                        complete={this.state.spin_complete}\n                        chosen_number={this.state.chosen_num}\n                        disabledBool={disabledBool}\n                        btn_dis_style={btn_dis_style}\n                        title=\"Betting Panel\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Roulette;\n"]},"metadata":{},"sourceType":"module"}